let Schema,model;_63e‍.x([["default",()=>_63e‍.o]]);_63e‍.w("mongoose",[["Schema",["Schema"],function(v){Schema=v}],["model",["model"],function(v){model=v}]]);


const CommentSchema = new Schema({
    user: {type: Schema.Types.ObjectId, ref: "User", required: true},
    desc: {type: String, required : true},
    post: {type: Schema.Types.ObjectId, ref: "Post", requied:true},
    check:{type:Boolean, default:false},
    parent:{ 
        type: Schema.Types.ObjectId,
        ref:"Comment",
        default: null,
    },
    replyOnUser:{
        type: Schema.Types.ObjectId,
        ref: "User",
        default: null,
    }
},
{
    timestamps: true
});

CommentSchema.virtual('replies',{
    ref: "Comment",
    localField: "_id",
    foreignField: "parent"
})

const Comment = model("Comment", CommentSchema);

_63e‍.d(Comment);