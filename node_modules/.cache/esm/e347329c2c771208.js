let express,dotenv,path,connectDB,errorResponserHandler,invalidPathHandler,userRoutes,postRoutes;_2c7‍.w("express",[["default",["express"],function(v){express=v}]]);_2c7‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_2c7‍.w("path",[["default",["path"],function(v){path=v}]]);_2c7‍.w("./config/db",[["default",["connectDB"],function(v){connectDB=v}]]);_2c7‍.w("./middleware/errorHandler",[["errorResponserHandler",["errorResponserHandler"],function(v){errorResponserHandler=v}],["invalidPathHandler",["invalidPathHandler"],function(v){invalidPathHandler=v}]]);_2c7‍.w("./routes/userRoutes",[["default",["userRoutes"],function(v){userRoutes=v}]]);_2c7‍.w("./routes/postRoutes",[["default",["postRoutes"],function(v){postRoutes=v}]]);







// Routes




dotenv.config();

connectDB();

const app = express();
app.use(express.json());

app.get('/', (req, res) => {
    res.send("server running...")
});

app.use("/api/users", userRoutes);
app.use("/api/posts", postRoutes);

// static assets
app.use('/uploads', express.static(path.join(__dirname, "/uploads")))

app.use(invalidPathHandler);
app.use(errorResponserHandler);

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => console.log(`server running port ${PORT}`));
