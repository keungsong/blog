let uploadPicture,Post,Comment,filRemover,uuid4;_5e2‍.x([["createPost",()=>createPost],["updatePost",()=>updatePost],["deletePost",()=>deletePost]]);_5e2‍.w("../middleware/uploadPictureMiddleWare",[["uploadPicture",["uploadPicture"],function(v){uploadPicture=v}]]);_5e2‍.w("../models/Post",[["default",["Post"],function(v){Post=v}]]);_5e2‍.w("../models/comment",[["default",["Comment"],function(v){Comment=v}]]);_5e2‍.w("../utils/fileRemover",[["filRemover",["filRemover"],function(v){filRemover=v}]]);_5e2‍.w("uuid",[["v4",["uuid4"],function(v){uuid4=v}]]);





const createPost = async (req, res, next) => {
    try {
        const post = new Post({
            title: "title",
            caption:"caption",
            slug: uuid4(),
            body:{
                type:"doc",
                content:[],

            },
            photo:"",
            user: req.user._id,
        });

        const createdPost = await post.save();
        return res.json(createdPost);
    } catch (error) {
       // return res.status(500).json({ message: "Something went wrong!"});
       next(error);
    }
};

 
const updatePost = async (req, res, next) => {
    try {
       const post = await Post.findOne({slug: req.params.slug});

       if(!post){
        const error = new Error("Post was not found");
        next(error);
        return;
       }

       const upload = uploadPicture.single('postPicture');

       const handleUpdatePostData = async (data) => {
        const {title, caption, slug, body, tags, categories} = JSON.parse(data);
        post.title = title || post.title;
        post.caption = caption || post.caption;
        post.slug = slug || post.slug;
        post.body = body || post.body;
        post.tags = tags || post.tags;
        post.categories = categories || post.categories;
        const updatedPost = await post.save();
        return res.json(updatedPost);
       }

       upload(req, res, async function(err){
          if(err){
           const error = new Error("An unknown error occured when uploading" + err.message);
           next(error);
          }else{
           // every thing went well
           if(req.file){
               let filename;
               filename = post.photo;
               if(filename){
                   filRemover(filename)
               }
               post.photo = req.file.filename;
               handleUpdatePostData(req.body.document);
           }else{
               let filename;
               filename = post.photo;
               post.photo = "";
               filRemover(filename);
               handleUpdatePostData(req.body.document);
           }
          }
       });

    } catch (error) {
       // return res.status(500).json({ message: "Something went wrong!"});
       next(error);
    }
};

const deletePost = async (req, res, next) => {
    try {
        const post = await Post.findOneAndDelete({slug: req.params.slug});

        if(!post){
            const error = new Error("Post was not found");
            return next(error);
        }

         await Comment.deleteMany({post: _id});

        return res.json({
            message: "Post is succesfully deleted",
        });
    } catch (error) {
        next(error);
    }
}
 



